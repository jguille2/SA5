<blocks app="Snap4Arduino 1.2
 http://snap4arduino.org" version="1"><block-definition s="LCD %&apos;MODE&apos; %&apos;CONFIG&apos; clear" type="command" category="arduino"><header></header><code></code><inputs><input type="%txt" readonly="true">i2c<options>i2c
6pins</options></input><input type="%txt">0x3F<options>0x3F
0x27
12,11,5,4,3,2</options></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>mode</l><l>config</l></list><l>var board = this.arduino.board,&#xD;  lcdConf = [0,0,0,0,0,0];&#xD;var conf = config.split(",");&#xD;if (mode == "i2c") {&#xD;  lcdConf = [0x00,conf[0],0x00,0x00,0x00,0x00];&#xD;} else if (mode == "6pins") {&#xD;  lcdConf =[conf[0],conf[1] || 0,conf[2] || 0,conf[3] || 0,conf[4] || 0,conf[5] || 0];&#xD;}&#xD;var data = [0xF0, 0xD1];&#xD;data = data.concat(lcdConf);&#xD;data.push(0xF7);&#xD;board.sp.write(new Buffer(data));</l></block><list><block var="MODE"/><block var="CONFIG"/></list></block></script></block-definition><block-definition s="LCD %&apos;MODE&apos; %&apos;CONFIG&apos; set cursor at col %&apos;col&apos; , row %&apos;row&apos;" type="command" category="arduino"><header></header><code></code><inputs><input type="%txt" readonly="true">i2c<options>i2c
6pins</options></input><input type="%txt">0x3F<options>0x3F
0x27
12,11,5,4,3,2</options></input><input type="%n"></input><input type="%n"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>mode</l><l>config</l><l>col</l><l>row</l></list><l>var board = this.arduino.board,&#xD;  lcdConf = [0,0,0,0,0,0];&#xD;var conf = config.split(",");&#xD;if (mode == "i2c") {&#xD;  lcdConf = [0x00,conf[0],0x00,0x00,0x00,0x00];&#xD;} else if (mode == "6pins") {&#xD;  lcdConf =[conf[0],conf[1] || 0,conf[2] || 0,conf[3] || 0,conf[4] || 0,conf[5] || 0];&#xD;}&#xD;var data = [0xF0, 0xD2];&#xD;data = data.concat(lcdConf);&#xD;data.push(col,row,0xF7);&#xD;board.sp.write(new Buffer(data));</l></block><list><block var="MODE"/><block var="CONFIG"/><block var="col"/><block var="row"/></list></block></script></block-definition><block-definition s="%&apos;string&apos; substring start %&apos;start&apos; end %&apos;end&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%s"></input><input type="%n"></input><input type="%n"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>string</l><l>start</l><l>end</l></list><l>return string.substring(start - 1, end)</l></block><list><block var="string"/><block var="start"/><block var="end"/></list></block></block></script></block-definition><block-definition s="min of %&apos;num&apos; and %&apos;num2&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%n"></input><input type="%n"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>num</l><l>num2</l></list><l>return Math.min(num, num2)</l></block><list><block var="num"/><block var="num2"/></list></block></block></script></block-definition><block-definition s="max of %&apos;num&apos; and %&apos;num2&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%n"></input><input type="%n"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>num</l><l>num2</l></list><l>return Math.max(num, num2)</l></block><list><block var="num"/><block var="num2"/></list></block></block></script></block-definition><block-definition s="scroll text %&apos;text&apos; interval %&apos;interval&apos; row %&apos;row&apos;" type="command" category="arduino"><header></header><code></code><inputs><input type="%s"></input><input type="%n"></input><input type="%n"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>this.arduino.scrolling = true;</l></block><list></list></block><block s="doDeclareVariables"><list><l>col</l></list></block><block s="doSetVar"><l>col</l><l>16</l></block><block s="doUntil"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return !this.arduino.scrolling</l></block><list></list></block><script><custom-block s="LCD %txt %txt clear"><l>i2c</l><l>0x3F</l></custom-block><custom-block s="LCD %txt %txt set cursor at col %n , row %n"><l>I2C</l><l>0x3F</l><custom-block s="max of %n and %n"><block var="col"/><l>0</l></custom-block><block var="row"/></custom-block><block s="doIfElse"><block s="reportGreaterThan"><block var="col"/><l>0</l></block><script><custom-block s="LCD %txt %txt print %txt"><l>i2c</l><l>0x3F</l><custom-block s="%s substring start %n end %n"><block var="text"/><l>1</l><l>16</l></custom-block></custom-block></script><script><custom-block s="LCD %txt %txt print %txt"><l>i2c</l><l>0x3F</l><custom-block s="%s substring start %n end %n"><block var="text"/><block s="reportSum"><block s="reportMonadic"><l><option>abs</option></l><block var="col"/></block><l>1</l></block><block s="reportSum"><block s="reportMonadic"><l><option>abs</option></l><block var="col"/></block><l>16</l></block></custom-block></custom-block></script></block><block s="doChangeVar"><l>col</l><l>-1</l></block><block s="doIf"><block s="reportLessThan"><block var="col"/><block s="reportProduct"><block s="reportStringSize"><block var="text"/></block><l>-1</l></block></block><script><block s="doSetVar"><l>col</l><l>16</l></block></script></block><block s="doWait"><block var="interval"/></block></script></block></script></block-definition><block-definition s="stop scrolling" type="command" category="arduino"><header></header><code></code><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>this.arduino.scrolling = false;</l></block><list></list></block></script></block-definition><block-definition s="LCD %&apos;MODE&apos; %&apos;CONFIG&apos; print %&apos;TEXT&apos;" type="command" category="arduino"><header></header><code></code><inputs><input type="%txt" readonly="true">i2c<options>i2c
6pins</options></input><input type="%txt">0x3F<options>0x3F
0x27
12,11,5,4,3,2</options></input><input type="%txt">Hello, world!</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>mode</l><l>config</l><l>text</l></list><l>var board = this.arduino.board,&#xD;  lcdConf = [0,0,0,0,0,0];&#xD;var conf = config.split(",");&#xD;if (mode == "i2c") {&#xD;  lcdConf = [0x00,conf[0],0x00,0x00,0x00,0x00];&#xD;} else if (mode == "6pins") {&#xD;  lcdConf =[conf[0],conf[1] || 0,conf[2] || 0,conf[3] || 0,conf[4] || 0,conf[5] || 0];&#xD;}&#xD;var data = [0xF0, 0xD0];&#xD;data = data.concat(lcdConf);&#xD;for (i = 0; i &lt; text.length; i++) {&#xD;  data.push(text.charCodeAt(i))&#xD;}&#xD;data.push(0xF7);&#xD;board.sp.write(new Buffer(data));</l></block><list><block var="MODE"/><block var="CONFIG"/><block var="TEXT"/></list></block></script></block-definition></blocks>